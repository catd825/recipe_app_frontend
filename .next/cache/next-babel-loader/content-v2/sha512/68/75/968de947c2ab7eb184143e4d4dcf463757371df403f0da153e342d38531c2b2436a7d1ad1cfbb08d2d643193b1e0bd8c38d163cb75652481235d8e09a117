{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { CURRENT_USER } from '../current_user';\nimport { useRouter } from 'next/router';\nimport { useRecipeContext } from '../RecipeContext/state';\nimport { useUserContext } from '../UserContext/state';\nexport default function Form({\n  recipe,\n  setEditState,\n  editHelper,\n  formType\n}) {\n  _s();\n\n  const {\n    recipes,\n    setRecipes\n  } = useRecipeContext();\n  const router = useRouter();\n  const {\n    user\n  } = useUserContext();\n  const current_user = user.user.id; // Re-usable for Edit and Create form )\n\n  const formObj = {\n    id: (recipe === null || recipe === void 0 ? void 0 : recipe.id) || '',\n    recipe_creator_id: current_user,\n    //only for testing before auth fully implemented\n    title: (recipe === null || recipe === void 0 ? void 0 : recipe.title) || '',\n    ingredients: (recipe === null || recipe === void 0 ? void 0 : recipe.ingredients) || '',\n    instructions: (recipe === null || recipe === void 0 ? void 0 : recipe.instructions) || '',\n    img_url: (recipe === null || recipe === void 0 ? void 0 : recipe.img_url) || '',\n    description: (recipe === null || recipe === void 0 ? void 0 : recipe.description) || ''\n  }; //Set initial formData state to object to edit\n\n  const {\n    0: formData,\n    1: setFormData\n  } = useState(formObj); //Set state to capture only changes made\n\n  const changeHandler = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(e.target.value);\n  };\n\n  const submitHelper = e => {\n    e.preventDefault();\n    submitHandler();\n  };\n\n  const submitHandler = async () => {\n    if (formType === 'Edit') {\n      const configObj = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      const res = await fetch(`http://localhost:3000/recipes/${recipe.id}`, configObj);\n      const data = await res.json(); //Toggle edit page to disappear\n\n      setEditState(null);\n      editHelper(formData);\n      const updatedRecipeArray = recipes.filter(recipe => recipe.id !== data.id);\n      setRecipes([...updatedRecipeArray, data].sort());\n    } else if (formType === 'Create') {\n      const configObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      };\n      const res = await fetch('http://localhost:3000/recipes', configObj);\n      const data = await res.json();\n      const newRecipeArray = [...recipes, data];\n      setRecipes(newRecipeArray);\n      router.push('/recipes');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHelper,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.title,\n          type: \"text\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.ingredients,\n          type: \"text\",\n          name: \"ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.instructions,\n          type: \"text\",\n          name: \"instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Add Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.img_url,\n          type: \"text\",\n          name: \"img_url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.description,\n          type: \"text\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Form, \"g1wUktTG68vfMAEf43BNpPehcx4=\", false, function () {\n  return [useRecipeContext, useRouter, useUserContext];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/Form.js"],"names":["useState","CURRENT_USER","useRouter","useRecipeContext","useUserContext","Form","recipe","setEditState","editHelper","formType","recipes","setRecipes","router","user","current_user","id","formObj","recipe_creator_id","title","ingredients","instructions","img_url","description","formData","setFormData","changeHandler","e","target","name","value","console","log","submitHelper","preventDefault","submitHandler","configObj","method","headers","body","JSON","stringify","res","fetch","data","json","updatedRecipeArray","filter","sort","newRecipeArray","push","padding"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { CURRENT_USER } from '../current_user'\nimport { useRouter } from 'next/router'\nimport { useRecipeContext } from '../RecipeContext/state'\nimport { useUserContext } from '../UserContext/state'\n\nexport default function Form ({ recipe, setEditState, editHelper, formType }) {\n    const {recipes, setRecipes} = useRecipeContext();\n    const router = useRouter()\n    const {user} = useUserContext();\n    const current_user = user.user.id\n\n    // Re-usable for Edit and Create form )\n    const formObj = {\n        id: recipe?.id || '',\n        recipe_creator_id: current_user, //only for testing before auth fully implemented\n        title: recipe?.title || '',\n        ingredients: recipe?.ingredients || '',\n        instructions: recipe?.instructions || '',\n        img_url: recipe?.img_url || '',\n        description: recipe?.description || ''\n    }\n\n    //Set initial formData state to object to edit\n    const [formData, setFormData] = useState(formObj)\n    //Set state to capture only changes made\n    const changeHandler = (e) => {\n        setFormData({\n            ...formData, \n            [e.target.name]: e.target.value\n        })\n        console.log(e.target.value)\n    }\n\n    const submitHelper = (e) => {\n        e.preventDefault()\n        submitHandler()\n    }\n\n\n    const submitHandler = async () => {\n        if(formType === 'Edit'){\n            const configObj = {\n                method: 'PATCH',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n                body: JSON.stringify(formData)\n            }\n\n            const res = await fetch(`http://localhost:3000/recipes/${recipe.id}`, configObj)\n            const data = await res.json();\n            //Toggle edit page to disappear\n            setEditState(null)\n            editHelper(formData)\n\n            const updatedRecipeArray = recipes.filter(recipe => recipe.id !== data.id)\n\n            setRecipes([\n                ...updatedRecipeArray, data\n            ].sort())\n        } else if (formType === 'Create'){\n            const configObj = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                },\n                body: JSON.stringify(formData)\n            }\n    \n                const res = await fetch('http://localhost:3000/recipes', configObj)\n                const data = await res.json()\n    \n                const newRecipeArray = [...recipes, data]\n                setRecipes(newRecipeArray)\n                router.push('/recipes');\n        }\n\n    }\n\n    \n    return (\n        <>\n        <div style= {{ padding: '2em'}}>\n            <form onSubmit={submitHelper}>\n                <label>Recipe Name</label>\n                <input onChange={changeHandler} value={formData.title} type=\"text\" name=\"title\"></input>\n                    <br/>\n                <label>Ingredients</label>\n                <input onChange={changeHandler} value={formData.ingredients} type=\"text\" name=\"ingredients\"></input>\n                    <br/>\n                <label>Instructions</label>\n                <input onChange={changeHandler} value={formData.instructions} type=\"text\" name=\"instructions\"></input>\n                    <br/>\n                <label>Add Photo</label>\n                <input onChange={changeHandler} value={formData.img_url} type=\"text\" name=\"img_url\"></input>\n                    <br/>\n                <label>Description</label>\n                <input onChange={changeHandler} value={formData.description} type=\"text\" name=\"description\"></input>\n                    <br/>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}