{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/pages/recipes/[id].js\";\nimport { useRouter } from 'next/router';\nimport { CURRENT_USER } from '../../current_user';\nexport const getStaticPaths = async () => {\n  const response = await fetch('http://localhost:3000/recipes');\n  const data = await response.json();\n  const paths = data.map(recipe => {\n    return {\n      params: {\n        id: recipe.id.toString()\n      }\n    };\n  });\n  return {\n    paths,\n    // short for paths: paths\n    fallback: false // we can use this to redirect to 404 page when it exists\n\n  };\n};\nexport const getStaticProps = async context => {\n  const id = context.params.id;\n  const response = await fetch('http://localhost:3000/recipes/' + id);\n  const data = await response.json();\n  return {\n    props: {\n      recipe: data\n    }\n  };\n};\n\nconst ShowPage = ({\n  recipe\n}) => {\n  const router = useRouter();\n  const current_user = CURRENT_USER;\n  console.log(recipe);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"show-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.img_url,\n          style: {\n            height: '250px'\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => router.push('/recipes'),\n        children: \"Back to Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), current_user === recipe.recipe_creator_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"edit!\"),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"delete!\"),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default ShowPage;","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/pages/recipes/[id].js"],"names":["useRouter","CURRENT_USER","getStaticPaths","response","fetch","data","json","paths","map","recipe","params","id","toString","fallback","getStaticProps","context","props","ShowPage","router","current_user","console","log","title","img_url","height","description","ingredients","instructions","push","recipe_creator_id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,QAAMC,KAAK,GAAGF,IAAI,CAACG,GAAL,CAASC,MAAM,IAAI;AAC7B,WAAO;AACHC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EAAP,CAAUC,QAAV;AAAN;AADL,KAAP;AAGH,GAJa,CAAd;AAKA,SAAO;AACHL,IAAAA,KADG;AACI;AACPM,IAAAA,QAAQ,EAAE,KAFP,CAEa;;AAFb,GAAP;AAIH,CAbM;AAeP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMJ,EAAE,GAAGI,OAAO,CAACL,MAAR,CAAeC,EAA1B;AACA,QAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmCO,EAApC,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAO;AACHU,IAAAA,KAAK,EAAE;AACHP,MAAAA,MAAM,EAAEJ;AADL;AADJ,GAAP;AAKH,CAVM;;AAaP,MAAMY,QAAQ,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAgB;AAE7B,QAAMS,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,YAAY,GAAGlB,YAArB;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACA,sBACI;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACI;AAAA,kBAAKA,MAAM,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAG;AAAK,UAAA,GAAG,EAAEb,MAAM,CAACc,OAAjB;AAA0B,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAC;AAAR,WAAjC;AAAmD,UAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIf,MAAM,CAACgB;AAAX;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAIhB,MAAM,CAACiB;AAAX;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAIjB,MAAM,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAE,MAAMT,MAAM,CAACU,IAAP,CAAY,UAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,EASKT,YAAY,KAAKV,MAAM,CAACoB,iBAAxB,gBACG;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAMT,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,OAAO,EAAE,MAAMD,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,sBADH,gBAMG,qCAfR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAwBH,CA9BD;;AAgCA,eAAeJ,QAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport { CURRENT_USER } from '../../current_user'\n\nexport const getStaticPaths = async () => {\n    const response = await fetch('http://localhost:3000/recipes')\n    const data = await response.json();\n\n    const paths = data.map(recipe => {\n        return {\n            params: { id: recipe.id.toString() }\n        }\n    })\n    return {\n        paths, // short for paths: paths\n        fallback: false // we can use this to redirect to 404 page when it exists\n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const id = context.params.id; \n    const response = await fetch('http://localhost:3000/recipes/' + id)\n    const data = await response.json();\n\n    return {\n        props: { \n            recipe: data\n        }\n    }\n}\n\n\nconst ShowPage = ({ recipe }) => {\n\n    const router = useRouter()\n    const current_user = CURRENT_USER\n\n    console.log(recipe)\n    return (\n        <> \n        <div class=\"show-card\">\n            <h1>{recipe.title}</h1>\n            <p><img src={recipe.img_url} style={{height:'250px'}} alt='' /></p>\n            <p>{recipe.description}</p>\n            <p>{recipe.ingredients}</p>\n            <p>{recipe.instructions}</p>\n            <button onClick={() => router.push('/recipes')}>Back to Main</button>\n            \n            {/* Edit / Delete buttons only appear if current user is the creator */}            \n            {current_user === recipe.recipe_creator_id ? \n                <>\n                    <button onClick={() => console.log(\"edit!\")}>Edit</button>\n                    <button onClick={() => console.log(\"delete!\")}>Delete</button> \n                </>\n                : \n                <>\n\n                </>\n            }\n        </div>\n        </>\n    )\n}\n\nexport default ShowPage"]},"metadata":{},"sourceType":"module"}