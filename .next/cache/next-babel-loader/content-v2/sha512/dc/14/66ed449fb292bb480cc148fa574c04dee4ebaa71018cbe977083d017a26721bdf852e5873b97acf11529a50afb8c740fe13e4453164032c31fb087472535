{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/pages/recipes/[id]/edit.js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport EditForm from '../../../Components/EditForm';\n\nconst Recipe = () => {\n  _s();\n\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const editId = parseInt(id);\n  console.log(isNaN(editId));\n\n  if (isNaN(editId)) {\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(EditForm, {\n        id: editId\n      }, editId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(Recipe, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/pages/recipes/[id]/edit.js"],"names":["useRouter","EditForm","Recipe","router","id","query","editId","parseInt","console","log","isNaN"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,8BAArB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAMC,MAAM,GAAGC,QAAQ,CAACH,EAAD,CAAvB;AAEJI,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACJ,MAAD,CAAjB;;AACI,MAAGI,KAAK,CAACJ,MAAD,CAAR,EAAiB;AACb,WAAO,IAAP;AACH,GAFD,MAEO;AACP,wBAAO;AAAA,6BAEA,QAAC,QAAD;AAAuB,QAAA,EAAE,EAAEA;AAA3B,SAAeA,MAAf;AAAA;AAAA;AAAA;AAAA;AAFA,qBAAP;AAIC;AACJ,CAdD;;GAAMJ,M;UACaF,S;;;KADbE,M;AAgBN,eAAeA,MAAf","sourcesContent":["import { useRouter } from 'next/router'\nimport EditForm from '../../../Components/EditForm'\n\nconst Recipe = () => {\n    const router = useRouter()\n    const { id } = router.query\n    const editId = parseInt(id)\n\nconsole.log(isNaN(editId))\n    if(isNaN(editId)){\n        return null\n    } else {\n    return <>\n        {/* Recipe: {id} */}\n           <EditForm key={editId} id={editId}/>\n        </>\n    }\n}\n\nexport default Recipe"]},"metadata":{},"sourceType":"module"}