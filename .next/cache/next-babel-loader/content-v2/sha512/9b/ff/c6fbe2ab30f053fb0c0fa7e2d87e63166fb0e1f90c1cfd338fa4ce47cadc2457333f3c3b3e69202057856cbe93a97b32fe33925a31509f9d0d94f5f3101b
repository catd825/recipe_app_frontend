{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/UserContext/state.js\";\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nconst UserContext = /*#__PURE__*/createContext(); //creates a store\n\nexport const UserProvider = ({\n  children\n}) => {\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState(false);\n  const userUrl = 'http://localhost:3000/api/v1/users';\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await fetch(userUrl);\n      const data = await response.json();\n      setUser(data);\n    };\n\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    const token = getToken();\n\n    if (token) {\n      retrieveUser(token);\n    }\n  }, []);\n\n  const getToken = () => {\n    return localStorage.getItem(\"token\");\n  };\n\n  const retrieveUser = () => {\n    const token = getToken();\n\n    if (token) {\n      fetch(\"http://localhost:3000/api/v1/profile\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(data => {\n        setUser({\n          user: data.user\n        });\n      });\n    } else {\n      router.push(\"/signup\");\n    }\n  };\n\n  const loginHandler = userInfo => {\n    // debugger\n    const configObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      'body': JSON.stringify({\n        user: userInfo\n      })\n    };\n    fetch(\"http://localhost:3000/api/v1/login\", configObj).then(response => response.json()).then(data => {\n      console.log(data); //   localStorage.setItem(\"token\", data.jwt)\n      //   setUser({user: data.user}, () => router.push(\"/signup\"))\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginHandler\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\nexport const useUserContext = () => {\n  return useContext(UserContext);\n};","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/UserContext/state.js"],"names":["createContext","useContext","useState","useEffect","useRouter","UserContext","UserProvider","children","router","user","setUser","userUrl","fetchUsers","response","fetch","data","json","token","getToken","retrieveUser","localStorage","getItem","method","headers","Authorization","then","push","loginHandler","userInfo","configObj","JSON","stringify","console","log","useUserContext"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,SAA9C,QAA+D,OAA/D;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC,C,CAAqC;;AAErC,OAAO,MAAMM,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE1C,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,OAAO,GAAG,oCAAhB;AAEER,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMS,UAAU,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,MAAAA,OAAO,CAACK,IAAD,CAAP;AACH,KAJD;;AAKAH,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT;AASAT,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMc,KAAK,GAAGC,QAAQ,EAAtB;;AACA,QAAGD,KAAH,EAAS;AACPE,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,QAAQ,GAAG,MAAM;AACrB,WAAOE,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD,GAFD;;AAIA,QAAMF,YAAY,GAAG,MAAM;AACzB,UAAMF,KAAK,GAAGC,QAAQ,EAAtB;;AACA,QAAID,KAAJ,EAAW;AACTH,MAAAA,KAAK,CAAC,sCAAD,EAAyC;AAC5CQ,QAAAA,MAAM,EAAE,KADoC;AAE5CC,QAAAA,OAAO,EAAE;AAACC,UAAAA,aAAa,EAAG,UAASP,KAAM;AAAhC;AAFmC,OAAzC,CAAL,CAICQ,IAJD,CAIMZ,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAJlB,EAKCS,IALD,CAKMV,IAAI,IAAI;AAEZL,QAAAA,OAAO,CAAC;AAACD,UAAAA,IAAI,EAAEM,IAAI,CAACN;AAAZ,SAAD,CAAP;AACC,OARH;AAUD,KAXD,MAWO;AACHD,MAAAA,MAAM,CAACkB,IAAP,CAAY,SAAZ;AACH;AACF,GAhBD;;AAiBA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC;AACA,UAAMC,SAAS,GAAG;AAChBP,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFO;AAMhB,cAAQO,IAAI,CAACC,SAAL,CAAe;AAACtB,QAAAA,IAAI,EAAEmB;AAAP,OAAf;AANQ,KAAlB;AAUAd,IAAAA,KAAK,CAAC,oCAAD,EAAuCe,SAAvC,CAAL,CACCJ,IADD,CACMZ,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EADlB,EAECS,IAFD,CAEMV,IAAI,IAAI;AACViB,MAAAA,OAAO,CAACC,GAAR,CAAYlB,IAAZ,EADU,CAEd;AACA;AACC,KAND;AASD,GArBD;;AAuBF,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEN,MAAAA,IAAF;AAAQkB,MAAAA;AAAR,KAA7B;AAAA,cACKpB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxEM;AA0EP,OAAO,MAAM2B,cAAc,GAAG,MAAM;AAChC,SAAOjC,UAAU,CAACI,WAAD,CAAjB;AACH,CAFM","sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\n\nconst UserContext = createContext(); //creates a store\n\nexport const UserProvider = ({ children }) => {\n\n    const router = useRouter();\n\n    const [user, setUser] = useState(false);\n    const userUrl = 'http://localhost:3000/api/v1/users';\n\n      useEffect( () => {\n        const fetchUsers = async () => {\n            const response = await fetch(userUrl)\n            const data = await response.json();\n            setUser(data);\n        };\n        fetchUsers();\n      }, []);\n\n      useEffect( () => {\n        const token = getToken()\n        if(token){\n          retrieveUser(token)\n        }\n      }, []);\n\n      const getToken = () => {\n        return localStorage.getItem(\"token\")\n      }\n\n      const retrieveUser = () => {\n        const token = getToken()\n        if (token) {\n          fetch(\"http://localhost:3000/api/v1/profile\", {\n            method: \"GET\",\n            headers: {Authorization: `Bearer ${token}`},\n          })\n          .then(response => response.json())\n          .then(data => {\n              \n            setUser({user: data.user})\n            }\n          )\n        } else {\n            router.push(\"/signup\")\n        }\n      }\n      const loginHandler = (userInfo) => {\n        // debugger\n        const configObj = {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n          },\n          'body': JSON.stringify({user: userInfo})\n        }\n\n      \n        fetch(\"http://localhost:3000/api/v1/login\", configObj)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n        //   localStorage.setItem(\"token\", data.jwt)\n        //   setUser({user: data.user}, () => router.push(\"/signup\"))\n        }\n        )\n      \n      }\n\n    return (\n        <UserContext.Provider value={{ user, loginHandler }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport const useUserContext = () => {\n    return useContext(UserContext)\n}"]},"metadata":{},"sourceType":"module"}