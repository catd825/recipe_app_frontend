{"ast":null,"code":"// import { createContext, useContext, useState, useEffect } from 'react'\n// import { useRouter } from 'next/router'\n// const UserContext = createContext(); //creates a store\n// export const UserProvider = ({ children }) => {\n//     const router = useRouter();\n//     const [user, setUser] = useState(false);\n//     const userUrl = 'http://localhost:3000/api/v1/users';\n//       useEffect( () => {\n//         const fetchUsers = async () => {\n//             const response = await fetch(userUrl)\n//             const data = await response.json();\n//             setUser(data);\n//         };\n//         fetchUsers();\n//       }, []);\n//       useEffect( () => {\n//         const token = getToken()\n//         if(token){\n//           retrieveUser(token)\n//         }\n//       }, []);\n//       const getToken = () => {\n//         return localStorage.getItem(\"token\")\n//       }\n//       const retrieveUser = () => {\n//         const token = getToken()\n//         if (token) {\n//           fetch(\"http://localhost:3000/api/v1/profile\", {\n//             method: \"GET\",\n//             headers: {Authorization: `Bearer ${token}`},\n//           })\n//           .then(response => response.json())\n//           .then(data => {\n//               setUser({user: data.user})}\n//           )\n//         } else {\n//             router.push(\"/signup\")\n//         }\n//       }\n//       const loginHandler = (userInfo) => {\n//         // debugger\n//         const configObj = {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Accept': 'application/json',\n//           },\n//           'body': JSON.stringify({user: userInfo})\n//         }\n//         console.log(configObj)\n//         fetch(\"http://localhost:3000/api/v1/login\", configObj)\n//         .then(response => response.json())\n//         .then(data => {\n//           localStorage.setItem(\"token\", data.jwt)\n//           setUser({user: data.user}, () => router.push(\"/recipes\"))\n//         })\n//       }\n//     return (\n//         <UserContext.Provider value={{ user, loginHandler }}>\n//             {children}\n//         </UserContext.Provider>\n//     )\n// }\n// export const useUserContext = () => {\n//     return useContext(UserContext)\n// }","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/UserContext/state.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import { createContext, useContext, useState, useEffect } from 'react'\n// import { useRouter } from 'next/router'\n\n// const UserContext = createContext(); //creates a store\n\n// export const UserProvider = ({ children }) => {\n\n//     const router = useRouter();\n\n//     const [user, setUser] = useState(false);\n//     const userUrl = 'http://localhost:3000/api/v1/users';\n\n//       useEffect( () => {\n//         const fetchUsers = async () => {\n//             const response = await fetch(userUrl)\n//             const data = await response.json();\n//             setUser(data);\n//         };\n//         fetchUsers();\n//       }, []);\n\n//       useEffect( () => {\n//         const token = getToken()\n//         if(token){\n//           retrieveUser(token)\n//         }\n//       }, []);\n\n//       const getToken = () => {\n//         return localStorage.getItem(\"token\")\n//       }\n\n//       const retrieveUser = () => {\n//         const token = getToken()\n//         if (token) {\n//           fetch(\"http://localhost:3000/api/v1/profile\", {\n//             method: \"GET\",\n//             headers: {Authorization: `Bearer ${token}`},\n//           })\n//           .then(response => response.json())\n//           .then(data => {\n//               setUser({user: data.user})}\n//           )\n//         } else {\n//             router.push(\"/signup\")\n//         }\n//       }\n//       const loginHandler = (userInfo) => {\n//         // debugger\n//         const configObj = {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Accept': 'application/json',\n//           },\n//           'body': JSON.stringify({user: userInfo})\n//         }\n//         console.log(configObj)\n//         fetch(\"http://localhost:3000/api/v1/login\", configObj)\n//         .then(response => response.json())\n//         .then(data => {\n//           localStorage.setItem(\"token\", data.jwt)\n//           setUser({user: data.user}, () => router.push(\"/recipes\"))\n//         })\n//       }\n\n//     return (\n//         <UserContext.Provider value={{ user, loginHandler }}>\n//             {children}\n//         </UserContext.Provider>\n//     )\n// }\n\n// export const useUserContext = () => {\n//     return useContext(UserContext)\n// }"]},"metadata":{},"sourceType":"script"}