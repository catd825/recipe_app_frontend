{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/RecipeList.js\";\nimport RecipeItem from './RecipeItem';\nimport SearchBar from './SearchBar';\nimport { CURRENT_USER } from '../current_user';\nimport { useState } from 'react';\nexport default function RecipeList({\n  recipes,\n  favorites,\n  currentSelection\n}) {\n  const current_user = CURRENT_USER;\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState('');\n\n  const searchHandler = e => {\n    setSearchValue(e.target.value);\n  };\n\n  const searchRecipes = () => {\n    return recipes.filter(recipe => {\n      return recipe.title.toLowerCase().includes(searchValue.toLowerCase());\n    });\n  };\n\n  console.log(searchRecipes()); //filter out recipes the user has created\n\n  const myCreatedRecipes = () => {\n    return searchRecipes().filter(recipe => recipe.recipe_creator_id === current_user);\n  }; //filter out recipes that i have liked\n\n\n  const myFavoriteRecipes = () => {\n    return favorites.filter(favorite => favorite.recipe_liker_id === current_user);\n  }; //map recipe_ids i have liked\n\n\n  const mapFavoriteRecipeIds = () => {\n    return myFavoriteRecipes().map(favorite => favorite.recipe_id);\n  };\n\n  const selection = currentSelection.state; //render conditions based on selection\n\n  const recipeCard = () => {\n    if (selection === 'created') {\n      return myCreatedRecipes().map(recipe => /*#__PURE__*/_jsxDEV(RecipeItem, {\n        recipes: recipe\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this));\n    } else if (selection === 'all' || selection === undefined) {\n      return recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeItem, {\n        recipes: recipe\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this));\n    } else if (selection === 'saved') {\n      return recipes.map(recipe => {\n        if (mapFavoriteRecipeIds().includes(recipe.id)) {\n          return /*#__PURE__*/_jsxDEV(RecipeItem, {\n            recipes: recipe\n          }, recipe.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }, this);\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchHandler: searchHandler,\n      searchValue: searchValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: recipeCard()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/RecipeList.js"],"names":["RecipeItem","SearchBar","CURRENT_USER","useState","RecipeList","recipes","favorites","currentSelection","current_user","searchValue","setSearchValue","searchHandler","e","target","value","searchRecipes","filter","recipe","title","toLowerCase","includes","console","log","myCreatedRecipes","recipe_creator_id","myFavoriteRecipes","favorite","recipe_liker_id","mapFavoriteRecipeIds","map","recipe_id","selection","state","recipeCard","id","undefined","textAlign"],"mappings":"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","sourcesContent":["import RecipeItem from './RecipeItem'\nimport SearchBar from './SearchBar'\nimport { CURRENT_USER } from '../current_user'\nimport { useState } from 'react'\n\nexport default function RecipeList ({ recipes, favorites, currentSelection }) {\n    const current_user = CURRENT_USER\n    const [searchValue, setSearchValue] = useState('')\n\n    const searchHandler = (e) => {\n      setSearchValue(e.target.value);\n    };\n  \n    const searchRecipes = () => {\n        return recipes.filter(recipe => {\n            return recipe.title.toLowerCase().includes(searchValue.toLowerCase())}\n        )\n    }\n    console.log(searchRecipes())\n\n\n\n    //filter out recipes the user has created\n    const myCreatedRecipes = () => {\n        return searchRecipes().filter(recipe => recipe.recipe_creator_id === current_user)\n    }\n\n    //filter out recipes that i have liked\n    const myFavoriteRecipes = () => {\n        return favorites.filter(favorite => favorite.recipe_liker_id === current_user)\n    }\n\n    //map recipe_ids i have liked\n    const mapFavoriteRecipeIds = () => {\n        return myFavoriteRecipes().map(favorite => favorite.recipe_id)\n    }\n\n    const selection = currentSelection.state\n    //render conditions based on selection\n    const recipeCard = () => {\n        if(selection === 'created') {\n            return myCreatedRecipes().map(recipe => \n                <RecipeItem key={recipe.id} recipes={recipe} />)\n        } else if (selection === 'all' || selection === undefined) {\n            return recipes.map(recipe => \n                <RecipeItem key={recipe.id} recipes={recipe} />)\n        } else if (selection === 'saved') {\n            return recipes.map(recipe => {\n                if(mapFavoriteRecipeIds().includes(recipe.id)){\n                    return <RecipeItem key={recipe.id} recipes={recipe} />\n                } else {\n                    return null\n                }\n            })\n        }\n    }\n\n\n    return (\n        <div style={{textAlign: 'center'}}>\n            <SearchBar searchHandler={searchHandler} searchValue={searchValue} />\n            <div className=\"cards\">\n                {recipeCard()}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}