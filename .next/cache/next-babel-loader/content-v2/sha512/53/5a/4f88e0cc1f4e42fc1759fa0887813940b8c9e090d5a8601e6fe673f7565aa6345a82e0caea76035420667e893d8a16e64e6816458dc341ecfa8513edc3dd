{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Containers/RecipeContainer.js\";\nimport { useState, useEffect } from 'react';\nimport RecipeItem from '../Components/RecipeItem';\nimport SavedRecipeCard from '../Components/SavedRecipeCard';\n\nfunction RecipeContainer() {\n  const {\n    0: recipes,\n    1: setRecipes\n  } = useState([]);\n  const recipeUrl = 'http://localhost:3000/recipes'; //fetch all recipes\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      const response = await fetch(recipeUrl);\n      const data = await response.json();\n      setRecipes(data);\n    };\n\n    fetchRecipes();\n  }, []); //parse recipe cards\n\n  const recipeCard = () => {\n    return recipes.map(recipe => /*#__PURE__*/_jsxDEV(RecipeItem, {\n      data: recipe\n    }, recipe.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 34\n    }, this));\n  }; //fetch favorite_recipes\n\n\n  const {\n    0: savedRecipes,\n    1: setSavedRecipes\n  } = useState([]);\n  const savedRecipeUrl = 'http://localhost:3000/favorite_recipes';\n  useEffect(() => {\n    const fetchSavedRecipes = async () => {\n      const response = await fetch(savedRecipeUrl);\n      const json = await response.json();\n      setSavedRecipes(json);\n    };\n\n    fetchSavedRecipes();\n  }, []); //fetch saved recipe cards\n\n  const savedRecipeCard = () => {\n    return savedRecipes.map(recipes => /*#__PURE__*/_jsxDEV(SavedRecipeCard, {\n      data: recipes\n    }, recipes.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 43\n    }, this));\n  };\n\n  console.log(recipes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleFavorites,\n      children: \"View your saved recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMyRecipes,\n      children: \"View your created recipes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\", recipeCard()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n;\nexport default RecipeContainer;","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Containers/RecipeContainer.js"],"names":["useState","useEffect","RecipeItem","SavedRecipeCard","RecipeContainer","recipes","setRecipes","recipeUrl","fetchRecipes","response","fetch","data","json","recipeCard","map","recipe","id","savedRecipes","setSavedRecipes","savedRecipeUrl","fetchSavedRecipes","savedRecipeCard","console","log","toggleFavorites","toggleMyRecipes"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,SAASC,eAAT,GAA2B;AAC3B,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMO,SAAS,GAAG,+BAAlB,CAF2B,CAI3B;;AACAN,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMO,YAAY,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,SAAD,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAN,MAAAA,UAAU,CAACK,IAAD,CAAV;AACH,KALD;;AAMAH,IAAAA,YAAY;AACb,GARM,EAQJ,EARI,CAAT,CAL2B,CAe3B;;AACE,QAAMK,UAAU,GAAG,MAAM;AACvB,WAAOR,OAAO,CAACS,GAAR,CAAYC,MAAM,iBAAI,QAAC,UAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAiBA,MAAM,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YAAtB,CAAP;AACD,GAFD,CAhByB,CAmB3B;;;AACE,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAmClB,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAMmB,cAAc,GAAG,wCAAvB;AAEAlB,EAAAA,SAAS,CAAG,MAAM;AACd,UAAMmB,iBAAiB,GAAG,YAAY;AAClC,YAAMX,QAAQ,GAAG,MAAMC,KAAK,CAACS,cAAD,CAA5B;AACA,YAAMP,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAM,MAAAA,eAAe,CAACN,IAAD,CAAf;AACH,KAJD;;AAKAQ,IAAAA,iBAAiB;AACpB,GAPQ,EAON,EAPM,CAAT,CAvByB,CAgC3B;;AACE,QAAMC,eAAe,GAAG,MAAM;AAC1B,WAAOJ,YAAY,CAACH,GAAb,CAAkBT,OAAO,iBAAI,QAAC,eAAD;AAAkC,MAAA,IAAI,EAAEA;AAAxC,OAAsBA,OAAO,CAACW,EAA9B;AAAA;AAAA;AAAA;AAAA,YAA7B,CAAP;AACH,GAFD;;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACA,sBACE;AAAA,4BAEE;AAAQ,MAAA,OAAO,EAAEmB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,+BAME;AAAQ,MAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,kBAUGZ,UAAU,EAVb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAAA;AAED,eAAeT,eAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport RecipeItem from '../Components/RecipeItem'\nimport SavedRecipeCard from '../Components/SavedRecipeCard'\n\nfunction RecipeContainer() {\nconst [recipes, setRecipes] = useState([]);\nconst recipeUrl = 'http://localhost:3000/recipes'\n\n//fetch all recipes\nuseEffect( () => {\n    const fetchRecipes = async () => {\n        const response = await fetch(recipeUrl)\n        const data = await response.json();\n\n        setRecipes(data);\n    };\n    fetchRecipes();\n  }, []);\n\n//parse recipe cards\n  const recipeCard = () => {\n    return recipes.map(recipe => <RecipeItem key={recipe.id} data={recipe} />)\n  }\n//fetch favorite_recipes\n  const [savedRecipes, setSavedRecipes]  = useState([]);\n  const savedRecipeUrl = 'http://localhost:3000/favorite_recipes'\n\n  useEffect ( () => {\n      const fetchSavedRecipes = async () => {\n          const response = await fetch(savedRecipeUrl)\n          const json = await response.json()\n          setSavedRecipes(json)\n      }\n      fetchSavedRecipes();\n  }, []);\n\n//fetch saved recipe cards\n  const savedRecipeCard = () => {\n      return savedRecipes.map((recipes => <SavedRecipeCard key={recipes.id} data={recipes} />))\n  }\n\n  console.log(recipes)\n  return (\n    <div>\n\n      <button onClick={toggleFavorites}>\n          View your saved recipes \n      </button>&nbsp;&nbsp;&nbsp;\n\n      <button onClick={toggleMyRecipes}>\n          View your created recipes \n      </button>&nbsp;&nbsp;&nbsp;\n\n      {recipeCard()}\n    </div>\n  );\n};\n\nexport default RecipeContainer;"]},"metadata":{},"sourceType":"module"}