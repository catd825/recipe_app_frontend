{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/EditForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { CURRENT_USER } from '../current_user';\nexport default function EditForm({\n  data,\n  setEditState\n}) {\n  const current_user = CURRENT_USER; //Pre-populate input fields with previous data\n\n  const formObj = {\n    recipe_creator_id: current_user,\n    //only for testing before auth fully implemented\n    title: recipe.title,\n    ingredients: recipe.ingredients,\n    instructions: recipe.instructions,\n    img_url: recipe.img_url,\n    description: recipe.description\n  }; //Set initial formData state to object to edit\n\n  const {\n    0: formData,\n    1: setFormData\n  } = useState(formObj); //Set state to capture only changes made\n\n  const changeHandler = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    })); // console.log(e.target.value)\n  };\n\n  const submitHelper = e => {\n    e.preventDefault();\n    submitHandler();\n  };\n  /*\n  //Define router and helper function to refresh upon edit submission\n  const router = useRouter();\n  const refreshData = () => {\n      router.replace(router.asPath);\n  }\n  */\n\n\n  const submitHandler = async () => {\n    const configObj = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    };\n    const res = await fetch(`http://localhost:3000/recipes/${recipe.id}`, configObj);\n    const recipe = await res.json(); //Toggle edit page to disappear\n\n    setEditState(null);\n    /*\n    //Invoke refresh helper\n    if (res.status < 300) {\n        refreshData();\n    }\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHelper,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formrecipe.title,\n          type: \"text\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formrecipe.ingredients,\n          type: \"text\",\n          name: \"ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formrecipe.instructions,\n          type: \"text\",\n          name: \"instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Add Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formrecipe.img_url,\n          type: \"text\",\n          name: \"img_url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formrecipe.description,\n          type: \"text\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/EditForm.js"],"names":["useState","useRouter","CURRENT_USER","EditForm","data","setEditState","current_user","formObj","recipe_creator_id","title","recipe","ingredients","instructions","img_url","description","formData","setFormData","changeHandler","e","target","name","value","submitHelper","preventDefault","submitHandler","configObj","method","headers","body","JSON","stringify","res","fetch","id","json","padding","formrecipe"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { CURRENT_USER } from '../current_user'\n\nexport default function EditForm ({ data, setEditState }) {\n\n    const current_user = CURRENT_USER\n    //Pre-populate input fields with previous data\n    const formObj = {\n        recipe_creator_id: current_user, //only for testing before auth fully implemented\n        title: recipe.title,\n        ingredients: recipe.ingredients,\n        instructions: recipe.instructions,\n        img_url: recipe.img_url,\n        description: recipe.description\n    }\n\n    //Set initial formData state to object to edit\n    const [formData, setFormData] = useState(formObj)\n    //Set state to capture only changes made\n    const changeHandler = (e) => {\n        setFormData({\n            ...formData, \n            [e.target.name]: e.target.value\n        })\n        // console.log(e.target.value)\n    }\n\n    const submitHelper = (e) => {\n        e.preventDefault()\n        submitHandler()\n    }\n\n    /*\n    //Define router and helper function to refresh upon edit submission\n    const router = useRouter();\n    const refreshData = () => {\n        router.replace(router.asPath);\n    }\n    */\n\n    const submitHandler = async () => {\n        const configObj = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify(formData)\n        }\n\n        const res = await fetch(`http://localhost:3000/recipes/${recipe.id}`, configObj)\n        const recipe = await res.json();\n        //Toggle edit page to disappear\n        setEditState(null)\n        \n        /*\n        //Invoke refresh helper\n        if (res.status < 300) {\n            refreshData();\n        }\n        */\n    }\n    \n    return (\n        <>\n        <div style= {{ padding: '2em'}}>\n            <form onSubmit={submitHelper}>\n                <label>Recipe Name</label>\n                <input onChange={changeHandler} value={formrecipe.title} type=\"text\" name=\"title\"></input>\n                    <br/>\n                <label>Ingredients</label>\n                <input onChange={changeHandler} value={formrecipe.ingredients} type=\"text\" name=\"ingredients\"></input>\n                    <br/>\n                <label>Instructions</label>\n                <input onChange={changeHandler} value={formrecipe.instructions} type=\"text\" name=\"instructions\"></input>\n                    <br/>\n                <label>Add Photo</label>\n                <input onChange={changeHandler} value={formrecipe.img_url} type=\"text\" name=\"img_url\"></input>\n                    <br/>\n                <label>Description</label>\n                <input onChange={changeHandler} value={formrecipe.description} type=\"text\" name=\"description\"></input>\n                    <br/>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}