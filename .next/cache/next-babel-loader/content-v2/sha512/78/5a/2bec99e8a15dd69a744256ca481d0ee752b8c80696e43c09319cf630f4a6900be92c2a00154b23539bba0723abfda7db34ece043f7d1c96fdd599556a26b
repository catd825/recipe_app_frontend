{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/pages/recipes/[id].js\";\nimport { useRouter } from 'next/router';\nimport { CURRENT_USER } from '../../current_user';\nimport { useState } from 'react';\nimport EditForm from '../../Components/EditForm';\nimport SaveButton from '../../Components/SaveButton';\nimport { useRecipeContext } from '../../RecipeContext/state';\nexport const getStaticPaths = async () => {\n  const response = await fetch('http://localhost:3000/recipes');\n  const data = await response.json();\n  const paths = data.map(recipe => {\n    return {\n      params: {\n        id: recipe.id.toString()\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false // redirects to 404 page\n\n  };\n};\nexport const getStaticProps = async context => {\n  const id = context.params.id;\n  const response = await fetch('http://localhost:3000/recipes/' + id);\n  const recipe = await response.json();\n  return {\n    props: {\n      recipe\n    }\n  };\n};\n\nconst ShowPage = ({\n  recipe\n}) => {\n  const router = useRouter();\n  const current_user = CURRENT_USER;\n  const {\n    0: editState,\n    1: setEditState\n  } = useState(null);\n  const {\n    recipes,\n    setRecipes\n  } = useRecipeContext();\n\n  const editHelper = updatedRecipeObj => {\n    //find current object we are working with\n    const recipeObj = recipes.filter(recipe => recipe.id === updatedRecipeObj.id);\n    console.log(recipeObj); //update changed properties, render it without refresh \n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.img_url,\n          style: {\n            height: '250px'\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => router.push('/recipes/'),\n        children: \"Back to Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), current_user === recipe.recipe_creator_id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditState(!editState),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => console.log(\"delete!\"),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(SaveButton, {\n          recipe: recipe\n        }, recipe.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), editState === true ? /*#__PURE__*/_jsxDEV(EditForm, {\n        setEditState: setEditState,\n        recipe: recipe,\n        editHelper: editHelper\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default ShowPage;","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/pages/recipes/[id].js"],"names":["useRouter","CURRENT_USER","useState","EditForm","SaveButton","useRecipeContext","getStaticPaths","response","fetch","data","json","paths","map","recipe","params","id","toString","fallback","getStaticProps","context","props","ShowPage","router","current_user","editState","setEditState","recipes","setRecipes","editHelper","updatedRecipeObj","recipeObj","filter","console","log","title","img_url","height","description","ingredients","instructions","push","recipe_creator_id"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\nimport { CURRENT_USER } from '../../current_user'\nimport { useState } from 'react'\nimport EditForm from '../../Components/EditForm'\nimport SaveButton from '../../Components/SaveButton'\nimport { useRecipeContext } from '../../RecipeContext/state'\n\nexport const getStaticPaths = async () => {\n    const response = await fetch('http://localhost:3000/recipes')\n    const data = await response.json();\n\n    const paths = data.map(recipe => {\n        return {\n            params: { id: recipe.id.toString() }\n        }\n    })\n\n    return {\n        paths,\n        fallback: false // redirects to 404 page\n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const id = context.params.id; \n    const response = await fetch('http://localhost:3000/recipes/' + id)\n    const recipe = await response.json();\n\n    return {\n        props: { \n            recipe\n        }\n    }\n}\n\n\nconst ShowPage = ({ recipe }) => {\n    const router = useRouter()\n    const current_user = CURRENT_USER\n\n    const [editState, setEditState] = useState(null)\n\n    const {recipes, setRecipes} = useRecipeContext();\n\n    const editHelper = (updatedRecipeObj) => {\n        //find current object we are working with\n        const recipeObj = recipes.filter(recipe => recipe.id === updatedRecipeObj.id)\n        console.log(recipeObj)\n        //update changed properties, render it without refresh \n    }\n\n    return (\n        <> \n        <div className=\"show-card\">\n            <h1>{recipe.title}</h1>\n            <p><img src={recipe.img_url} style={{height:'250px'}} alt='' /></p>\n            <p>{recipe.description}</p>\n            <p>{recipe.ingredients}</p>\n            <p>{recipe.instructions}</p>\n            <button onClick={() => router.push('/recipes/')}>Back to Main</button>\n            \n            {/* Edit / Delete buttons only appear if current user is the creator */}            \n            {current_user === recipe.recipe_creator_id ? \n                <>\n                    <button onClick={() => setEditState(!editState)}>Edit</button>\n                    <button onClick={() => console.log(\"delete!\")}>Delete</button> \n                </>\n                : \n                <>\n                    <SaveButton recipe={recipe} key={recipe.id} />\n                    {/* <button onClick={() => console.log(\"save!\")}>Save</button>  */}\n                </>\n            }\n            {editState === true ? <EditForm setEditState={setEditState} key={recipe.id} recipe={recipe} editHelper={editHelper} /> : <></>}\n        </div>\n        </>\n    )\n}\n\nexport default ShowPage"]},"metadata":{},"sourceType":"module"}