{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/EditForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { CURRENT_USER } from '../current_user';\nexport default function EditForm({\n  recipe\n}) {\n  console.log(recipe);\n  const current_user = CURRENT_USER;\n  const router = useRouter(); // const recipeEmpty = () => {\n  //     return recipes.length !==0 ? recipes : ''\n  // }\n\n  const formObj = {\n    recipe_creator_id: current_user,\n    //only for testing before auth fully implemented\n    title: recipe.title,\n    ingredients: recipe.ingredients,\n    instructions: recipe.instructions,\n    img_url: recipe.img_url,\n    description: recipe.description\n  }; // debugger\n\n  const {\n    0: formData,\n    1: setFormData\n  } = useState(formObj);\n\n  const changeHandler = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const submitHelper = e => {\n    e.preventDefault();\n    submitHandler();\n  };\n\n  const submitHandler = () => {\n    const configObj = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    };\n    fetch('http://localhost:3000/recipes', configObj).then(res => res.json()).then(() => router.push('/recipes'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHelper,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Recipe Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.title,\n          type: \"text\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.ingredients,\n          type: \"text\",\n          name: \"ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.instructions,\n          type: \"text\",\n          name: \"instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Add Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.img_url,\n          type: \"text\",\n          name: \"img_url\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: formData.description,\n          type: \"text\",\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/catherineadonofrio/Development/code/Mod6/recipe_app/recipe_tracker_frontend/src/Components/EditForm.js"],"names":["useState","useEffect","useRouter","CURRENT_USER","EditForm","recipe","console","log","current_user","router","formObj","recipe_creator_id","title","ingredients","instructions","img_url","description","formData","setFormData","changeHandler","e","target","name","value","submitHelper","preventDefault","submitHandler","configObj","method","headers","body","JSON","stringify","fetch","then","res","json","push"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { CURRENT_USER } from '../current_user'\n\nexport default function EditForm ({recipe}) {\n\n    console.log(recipe)\n    const current_user = CURRENT_USER\n    const router = useRouter()\n\n    // const recipeEmpty = () => {\n    //     return recipes.length !==0 ? recipes : ''\n    // }\n\n    const formObj = {\n        recipe_creator_id: current_user, //only for testing before auth fully implemented\n        title: recipe.title,\n        ingredients: recipe.ingredients,\n        instructions: recipe.instructions,\n        img_url: recipe.img_url,\n        description: recipe.description\n    }\n \n    // debugger\n\n    const [formData, setFormData] = useState(formObj)\n\n    const changeHandler = (e) => {\n        setFormData({\n            ...formData, \n            [e.target.name]: e.target.value\n        })\n    }\n\n    const submitHelper = (e) => {\n        e.preventDefault()\n        submitHandler()\n    }\n\n    const submitHandler = () => {\n        const configObj = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n            },\n            body: JSON.stringify(formData)\n        }\n\n            fetch('http://localhost:3000/recipes', configObj)\n            .then(res => res.json())\n            .then(() => router.push('/recipes'))\n    }\n\n    \n    return (\n        <>\n        <div>\n            <form onSubmit={submitHelper}>\n                <label>Recipe Name</label>\n                <input onChange={changeHandler} value={formData.title} type=\"text\" name=\"title\"></input>\n                    <br/>\n                <label>Ingredients</label>\n                <input onChange={changeHandler} value={formData.ingredients} type=\"text\" name=\"ingredients\"></input>\n                    <br/>\n                <label>Instructions</label>\n                <input onChange={changeHandler} value={formData.instructions} type=\"text\" name=\"instructions\"></input>\n                    <br/>\n                <label>Add Photo</label>\n                <input onChange={changeHandler} value={formData.img_url} type=\"text\" name=\"img_url\"></input>\n                    <br/>\n                <label>Description</label>\n                <input onChange={changeHandler} value={formData.description} type=\"text\" name=\"description\"></input>\n                    <br/>\n                <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}